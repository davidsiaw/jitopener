using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.IO;

namespace JitOpener {
	class Crypto {

        unsafe public static void DecipherReinforce(string filename, byte[] cipherTable)
        {
            Console.WriteLine("Deciphering {0}", filename);
			using (BinaryReader br = new BinaryReader(new FileStream(filename, FileMode.Open))) {

				using (BinaryWriter bw = new BinaryWriter(new FileStream(filename + ".dec", FileMode.Create))) {

					for (long i = 0; i < br.BaseStream.Length; i++) {
						bw.Write((byte)(br.ReadByte() - cipherTable[i % cipherTable.Length] - i));
					}
				}
			}
		}

        unsafe public static void DecipherReinforce2(string filename, byte[] cipherTable)
        {
            Console.WriteLine("Deciphering {0}", filename);
            using (BinaryReader br = new BinaryReader(new FileStream(filename, FileMode.Open)))
            {

                using (BinaryWriter bw = new BinaryWriter(new FileStream(filename + ".dec", FileMode.Create)))
                {

                    for (long i = 0; i < br.BaseStream.Length; i++)
                    {
                        bw.Write((byte)(br.ReadByte() - cipherTable[i % cipherTable.Length]));
                    }
                }
            }
        }

        unsafe public static void EncipherReinforce(string filename, byte[] cipherTable)
        {
            using (BinaryReader br = new BinaryReader(new FileStream(filename, FileMode.Open)))
            {

                using (BinaryWriter bw = new BinaryWriter(new FileStream(filename + ".enc", FileMode.Create)))
                {

                    for (long i = 0; i < br.BaseStream.Length; i++)
                    {
                        bw.Write((byte)(br.ReadByte() + cipherTable[i % cipherTable.Length] + i));
                    }
                }
            }
        }




        public static byte[] CT1 = {

0xC0, 0xCC, 0xB0, 0xC5,0x20, 0xC0, 0xD0, 0xC1, 0xF6, 0x20, 0xB8, 0xB6, 0xBC, 0xBC, 0xBF, 0xE4,
0x2E, 0x20, 0xC0, 0xD0, 0xC0, 0xB8, 0xB8, 0xE9, 0x20, 0xB3, 0xAA, 0xBB, 0xDB, 0xBB, 0xE7, 0xB6,
0xF7, 0xB5, 0xCB, 0xB4, 0xCF, 0xB4, 0xD9, 0x2E, 0x20, 0xC1, 0xA6, 0xB9, 0xDF, 0x20, 0xC0, 0xFD,
0xB4, 0xEB, 0x20, 0xC0, 0xD0, 0xC1, 0xF6, 0xB8, 0xBB, 0xB0, 0xED, 0x20, 0xC2, 0xF8, 0xC7, 0xD1,
0x20, 0xBB, 0xE7, 0xB6, 0xF7, 0xB5, 0xEE, 0xB7, 0xCE, 0x20, 0xBB, 0xE7, 0xBC, 0xBC, 0xBF, 0xE4,
0x2E, 0x20, 0xBE, 0xC6, 0xBC, 0xCC, 0xC1, 0xD2, 0x3F, 0x20, 0xC1, 0xC1, 0xC0, 0xBA, 0xBC, 0xBC,
0xBB, 0xF3, 0xB8, 0xB8, 0xB5, 0xEC, 0xBD, 0xC3, 0xB4, 0xD9, 0x2E};


        public static byte[] CT2 = {

 0xBE, 0xC6, 0xC0, 0xCC, 0xC5, 0xDB, 0x20, 0xB8, 0xAE, 0xBD, 0xBA, 0xC6, 0xAE, 0x20, 0xC0, 0xCE
, 0xC4, 0xDA, 0xB5, 0xF9, 0x20, 0xB7, 0xE7, 0xC6, 0xBE, 0xC0, 0xD4, 0xB4, 0xCF, 0xB4, 0xD9, 0x2E
, 0x20, 0xB7, 0xEA, 0xB7, 0xE7, 0x20, 0xB6, 0xF6, 0xB6, 0xF3, 0x2E, 0x2E, 0x2E, 0x20, 0xC0, 0xB8
, 0x2E, 0x2E, 0x2E, 0x20, 0xC1, 0xA4, 0xB8, 0xBB, 0x20, 0xC1, 0xA4, 0xB8, 0xBB, 0x20, 0xB1, 0xCD
, 0xC2, 0xFA, 0xB4, 0xD9, 0x2E, 0x20, 0xB1, 0xD7, 0xB7, 0xA1, 0xB5, 0xB5, 0x20, 0xC7, 0xD8, 0xBE
, 0xDF, 0xC7, 0xCF, 0xB4, 0xCF, 0x20, 0xBE, 0xEE, 0xC2, 0xBF, 0x20, 0xBC, 0xF6, 0x20, 0xBE, 0xF8
, 0xC1, 0xD2, 0x2E, 0x2E, 0x2E, 0x20};

        public static byte[] CT3 = { 0 };

        public static byte[] CT4 = { 0,1,2,3,4 };

        public static byte[] CT5 = {

    0x8F,0x96,0x60,0x55,0x80,0x9D,0xC8,0xD7,0xC8,0xF6,0xC6,0x40,0xE4,0xA0,0xAA,0x13,
    0xC0,0xFA,0x40,0x30,0x1C,0x81,0xC2,0x88,0xD8,0x20,0x48,0x09,0x3C,0x92,0x17,0xB4,
    0x00,0xC2,0x7A,0x96,0xD3,0xA0,0x20,0x87,0xC0,0xFB,0x26,0xAE,0xB9,0x48,0xC0,0x55,
    0x40,0x07,0x82,0x08,0x24,0xEC,0xA8,0x09,0x68,0x21,0x21,0xE4,0x5F,0xAB,0x90,0xE1,
                                   };


        public static byte[] CT6 = { 


0x00,0x02,0x04,0x06,0x04,0x06,0x08,0x0A,0x08,0x0A,0x0C,0x0E,0x0C,0x0E,0x10,0x12,
0x10,0x12,0x14,0x16,0x14,0x16,0x18,0x1A,0x18,0x1A,0x1C,0x1E,0x1C,0x1E,0x20,0x22,
0x20,0x22,0x24,0x26,0x24,0x26,0x28,0x2A,0x28,0x2A,0x2C,0x2E,0x2C,0x2E,0x30,0x32,
0x30,0x32,0x34,0x36,0x34,0x36,0x38,0x3A,0x38,0x3A,0x3C,0x3E,0x3C,0x3E,0x40,0x42,
0x40,0x42,0x44,0x46,0x44,0x46,0x48,0x4A,0x48,0x4A,0x4C,0x4E,0x4C,0x4E,0x50,0x52,
0x50,0x52,0x54,0x56,0x54,0x56,0x58,0x5A,0x58,0x5A,0x5C,0x5E,0x5C,0x5E,0x60,0x62,
0x60,0x62,0x64,0x66,0x64,0x66,0x68,0x6A,0x68,0x6A,0x6C,0x6E,0x6C,0x6E,0x70,0x72,
0x70,0x72,0x74,0x76,0x74,0x76,0x78,0x7A,0x78,0x7A,0x7C,0x7E,0x7C,0x7E,0x80,0x82,
0x80,0x82,0x84,0x86,0x84,0x86,0x88,0x8A,0x88,0x8A,0x8C,0x8E,0x8C,0x8E,0x90,0x92,
0x90,0x92,0x94,0x96,0x94,0x96,0x98,0x9A,0x98,0x9A,0x9C,0x9E,0x9C,0x9E,0xA0,0xA2,
0xA0,0xA2,0xA4,0xA6,0xA4,0xA6,0xA8,0xAA,0xA8,0xAA,0xAC,0xAE,0xAC,0xAE,0xB0,0xB2,
0xB0,0xB2,0xB4,0xB6,0xB4,0xB6,0xB8,0xBA,0xB8,0xBA,0xBC,0xBE,0xBC,0xBE,0xC0,0xC2,
0xC0,0xC2,0xC4,0xC6,0xC4,0xC6,0xC8,0xCA,0xC8,0xCA,0xCC,0xCE,0xCC,0xCE,0xD0,0xD2,
0xD0,0xD2,0xD4,0xD6,0xD4,0xD6,0xD8,0xDA,0xD8,0xDA,0xDC,0xDE,0xDC,0xDE,0xE0,0xE2,
0xE0,0xE2,0xE4,0xE6,0xE4,0xE6,0xE8,0xEA,0xE8,0xEA,0xEC,0xEE,0xEC,0xEE,0xF0,0xF2,
0xF0,0xF2,0xF4,0xF6,0xF4,0xF6,0xF8,0xFA,0xF8,0xFA,0xFC,0xFE,0xFC,0xFE,0x00,0x02,


                                   };
	}
}
